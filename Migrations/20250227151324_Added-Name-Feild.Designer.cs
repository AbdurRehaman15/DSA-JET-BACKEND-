// <auto-generated />
using DsaJet.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DsaJet.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250227151324_Added-Name-Feild")]
    partial class AddedNameFeild
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("DsaJet.Api.Entities.Prerequisite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Prereq")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProblemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProblemId");

                    b.ToTable("Prerequisites");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Prereq = "Sorting Algorithms",
                            ProblemId = 2
                        },
                        new
                        {
                            Id = 2,
                            Prereq = "Arrays",
                            ProblemId = 2
                        });
                });

            modelBuilder.Entity("DsaJet.Api.Entities.Problem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("VideoSolutionUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Problems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Given two integer numbers find there sum",
                            Difficulty = "Easy",
                            Name = "Find the sum of two numbers",
                            Tag = "Math",
                            VideoSolutionUrl = "https://example.com/sum"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Given an array of size n apply the binaru search algorithm on it",
                            Difficulty = "Medium",
                            Name = "Implement Binary Search",
                            Tag = "Search",
                            VideoSolutionUrl = "https://example.com/binary-search"
                        });
                });

            modelBuilder.Entity("DsaJet.Api.Entities.Solution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProblemId")
                        .HasColumnType("int");

                    b.Property<string>("SolutionCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ProblemId");

                    b.ToTable("Solutions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Language = "Python",
                            ProblemId = 1,
                            SolutionCode = "def sum(a, b): return a + b"
                        },
                        new
                        {
                            Id = 2,
                            Language = "C++",
                            ProblemId = 1,
                            SolutionCode = "int sum(int a, int b) { return a + b; }"
                        },
                        new
                        {
                            Id = 3,
                            Language = "Java",
                            ProblemId = 2,
                            SolutionCode = "int binarySearch(int[] arr, int x) { /* code */ }"
                        });
                });

            modelBuilder.Entity("DsaJet.Api.Entities.Prerequisite", b =>
                {
                    b.HasOne("DsaJet.Api.Entities.Problem", "Problem")
                        .WithMany("Prerequisites")
                        .HasForeignKey("ProblemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Problem");
                });

            modelBuilder.Entity("DsaJet.Api.Entities.Solution", b =>
                {
                    b.HasOne("DsaJet.Api.Entities.Problem", "Problem")
                        .WithMany("Solutions")
                        .HasForeignKey("ProblemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Problem");
                });

            modelBuilder.Entity("DsaJet.Api.Entities.Problem", b =>
                {
                    b.Navigation("Prerequisites");

                    b.Navigation("Solutions");
                });
#pragma warning restore 612, 618
        }
    }
}
